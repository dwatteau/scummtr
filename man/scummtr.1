.Dd $Mdocdate: December 27 2020 $
.Dt SCUMMTR 1
.Os
.Sh NAME
.Nm scummtr
.Nd import and export fan translations for SCUMM engine games
.Sh SYNOPSIS
.Nm scummtr
.Fl i
.Op Fl bcqvw
.Op Fl l Ar language
.Fl g Ar gameid
.Fl p Ar gamedir
.Fl f Ar input
.Nm scummtr
.Fl o
.Op Fl bchHIqvw
.Op Fl a Ar resource
.Op Fl A Ar resource
.Op Fl l Ar language
.Fl g Ar gameid
.Fl p Ar gamedir
.Fl f Ar output
.Nm scummtr
.Fl L
.Sh DESCRIPTION
The
.Nm
tool imports and exports text for SCUMM engine games.
The mode of operation is chosen with one of the following options:
.Bl -tag -width Ds
.It Fl i
Import text into the game data files.
.It Fl o
Export text from the game data files.
.It Fl L
List all supported games with their respective
.Ar gameid .
.El
.Pp
The other options are as follows:
.Bl -tag -width Dslanguage
.It Fl a Ar resource
Protect the specified SCUMM resource types with extra padding, when
exporting.
.Pp
Some game resources are created with a short name and use a longer
name later in the game.
By default, this must be handled with manual
.Ql @
character padding, to prevent game errors when the rename happens.
The
.Fl a
option just applies extra padding to all specified resource types to
make things easier, at the cost of increased memory usage.
.Pp
Valid resource types for the
.Fl a
option are:
.Bl -tag -width Ds
.It Ic a
Pad all actor resources.
.It Ic o
Pad all object resources.
.It Ic v
Pad all verb resources.
.El
.It Fl A Ar resource
Same as
.Fl a ,
with variable IDs taken into account.
.It Fl b
Translation file will be handled in binary mode, instead of text.
.Pp
Note that this makes most other options inoperative.
.It Fl c
Translation file will be handled as Windows-1252 (or ISO-8859-1),
allowing easier use of some Western European characters.
Without
.Fl c ,
non-ASCII characters can only be used through escape sequences.
.Pp
Note that SCUMM games only include an incomplete subset of the MS-DOS
CP 850 code page, with some local modifications.
.Nm
translates this code page to Windows-1252, but doesn't add the
missing characters to the internal fonts.
Use
.Xr scummfont 1
for this.
.It Fl f Ar file
The path to the translation file (default:
.Pa scummtr.txt ) .
.It Fl g Ar gameid
The ID of the game variant to be translated, as given by
.Fl L .
.It Fl h
Include a small header at the start of each line, indicating the internal script
context of the current string.
.It Fl H
Represent escape sequences as hexadecimal codes, instead of decimal codes.
.It Fl I
Include the current SCUMM instruction opcode, before each line.
.It Fl l Ar language
V1 and V2 games only (i.e. all games before Zak McKracken FM-TOWNS).
The name of the language character set to be used for this translation.
.Pp
Possible values are:
.Bl -tag -width Ds
.It Ic de
Original German charset.
.It Ic en
Original English charset (default).
.It Ic fr
Original French charset.
.It Ic it
Original Italian charset.
.El
.It Fl p Ar gamedir
The path to the game (default: current directory).
.It Fl q
Quiet mode.
Suppress informational output.
.It Fl v
Verbose mode.
.It Fl w
Translation file uses Windows-type newline characters (CRLF).
.Pp
By default,
.Nm
only uses Unix-type newline characters (LF), which may be less
compatible with some text editors.
.El
.Sh EXAMPLES
Extract the text of the original Monkey Island 2 game to a
Windows-1252 file compatible with Microsoft Notepad, with added context:
.Pp
.Dl $ scummtr -cw -h -g monkey2 -p /path/to/MI2 -of mi2_orig.txt
.Pp
Import a new French translation into the game files:
.Pp
.Dl $ scummtr -cw -h -g monkey2 -p /path/to/MI2 -if mi2_fr.txt
.Pp
Export the text of a German Zak McKracken V2 game, padding objects
and verbs, and using default paths:
.Pp
.Dl $ scummtr -cw -g zakv2 -l de -A ov -o
.Sh HISTORY
The
.Nm
tool was written between 2003 and 2005
by Thomas Combeleran for the ATP team,
and was open-sourced in 2020 under an MIT license.
.Sh CAVEATS
Your text editor must not remove trailing spaces or empty lines,
otherwise you will have import errors.
.Pp
Since each game and each variant of each game had its own list of
accepted characters, it is not possible to know if a character
is available without testing it in the game.
See also
.Xr scummfont 1
in order to visualize or modify the included font tables.
.Pp
Unicode files are not supported, and non-Roman languages cannot
be easily typed, since escape sequences are required.
.Pp
On case-sensitive file systems, game data files must currently
follow the DOS convention of being all-uppercase to be properly
detected.
